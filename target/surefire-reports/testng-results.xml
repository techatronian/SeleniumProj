<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="1" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-07-01T08:51:50 IST" name="Suite" finished-at="2022-07-01T08:52:18 IST" duration-ms="28085">
    <groups>
    </groups>
    <test started-at="2022-07-01T08:51:50 IST" name="Test" finished-at="2022-07-01T08:52:18 IST" duration-ms="28085">
      <class name="tests.LoginTest">
        <test-method is-config="true" signature="DriverInitialization()[pri:0, instance:tests.LoginTest@45099dd3]" started-at="2022-07-01T08:51:50 IST" name="DriverInitialization" finished-at="2022-07-01T08:51:50 IST" duration-ms="143" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DriverInitialization -->
        <test-method is-config="true" signature="SetupBrowser(java.lang.String)[pri:0, instance:tests.LoginTest@45099dd3]" started-at="2022-07-01T08:51:50 IST" name="SetupBrowser" finished-at="2022-07-01T08:51:52 IST" duration-ms="1643" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetupBrowser -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:tests.LoginTest@45099dd3]" started-at="2022-07-01T08:51:52 IST" name="beforeClass" finished-at="2022-07-01T08:52:05 IST" duration-ms="13202" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="CreateTestforReport(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@45099dd3]" started-at="2022-07-01T08:52:05 IST" name="CreateTestforReport" finished-at="2022-07-01T08:52:05 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.Validate_LoginTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateTestforReport -->
        <test-method signature="Validate_LoginTest()[pri:0, instance:tests.LoginTest@45099dd3]" started-at="2022-07-01T08:52:05 IST" name="Validate_LoginTest" finished-at="2022-07-01T08:52:18 IST" duration-ms="12691" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Validate_LoginTest -->
        <test-method is-config="true" signature="CreateTestforReport(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@45099dd3]" started-at="2022-07-01T08:52:18 IST" name="CreateTestforReport" finished-at="2022-07-01T08:52:18 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.Validate_TopMenuLinks()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateTestforReport -->
        <test-method is-config="true" signature="PrintResults(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@45099dd3]" started-at="2022-07-01T08:52:18 IST" name="PrintResults" finished-at="2022-07-01T08:52:18 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Validate_LoginTest status=SUCCESS method=LoginTest.Validate_LoginTest()[pri:0, instance:tests.LoginTest@45099dd3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PrintResults -->
        <test-method signature="Validate_TopMenuLinks()[pri:0, instance:tests.LoginTest@45099dd3]" started-at="2022-07-01T08:52:18 IST" name="Validate_TopMenuLinks" finished-at="2022-07-01T08:52:18 IST" duration-ms="345" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The actual size is 10 and the expected size is 8 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The actual size is 10 and the expected size is 8 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at tests.LoginTest.Validate_TopMenuLinks(LoginTest.java:66)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Validate_TopMenuLinks -->
        <test-method is-config="true" signature="PrintResults(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@45099dd3]" started-at="2022-07-01T08:52:18 IST" name="PrintResults" finished-at="2022-07-01T08:52:18 IST" duration-ms="173" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Validate_TopMenuLinks status=FAILURE method=LoginTest.Validate_TopMenuLinks()[pri:0, instance:tests.LoginTest@45099dd3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PrintResults -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:tests.LoginTest@45099dd3]" started-at="2022-07-01T08:52:18 IST" name="afterClass" finished-at="2022-07-01T08:52:18 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="DriverTermination()[pri:0, instance:tests.LoginTest@45099dd3]" started-at="2022-07-01T08:52:19 IST" name="DriverTermination" finished-at="2022-07-01T08:52:19 IST" duration-ms="288" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DriverTermination -->
      </class> <!-- tests.LoginTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
